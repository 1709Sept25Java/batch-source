/*QUESTION 2.1*/
/*USING THE SELECT OPERATOR*/
/*USING THE * TO SELECT ALL FIELDS FROM EMPLOYEE*/
select*
from EMPLOYEE;

/*USING THE * TO SELECT ALL FIELDS FROM EMPLOYEE WHERE THE LAST NAME EQUALS TO "KING*/
select*
from EMPLOYEE
WHERE LASTNAME = 'King';

/*USING THE * TO SELECT ALL FIELDS FROM EMPLOYEE WHERE THE LAST NAME EQUALS TO "KING AND REPORTSTO IS NULL*/
SELECT *
FROM EMPLOYEE
WHERE fIRSTNAME = 'Andrew' and REPORTSTO IS NULL;

/*QUESTION 2.2*/
/*USING THE ORDER BY OPERATOR*/
/*USING THE * TO SELECT ALL FIELDS FROM ALBUM AND THE TITLE OF THE ALBUM IS IN DESCENDING ORDER BY USING THE DESC KEYWORD*/
SELECT *
FROM ALBUM
ORDER BY TITLE DESC;

/*SELECTING ONLY THE FIRSTNAME OF THE CUSTOMER TABLE AND ORDERING THEM IN ASCENDING ORDER BASED ON THEIR CITY*/
SELECT FIRSTNAME
FROM CUSTOMER
ORDER BY CITY ASC;

/*QUESTION 2.3*/
/*USING THE INSERT INTO OPERATOR*/
/*INSERTING DATA IN THE GENRE TABLE*/
INSERT INTO Genre (GenreId, Name) VALUES (26, 'Folk');
INSERT INTO Genre (GenreId, Name) VALUES (27, 'Techno');
SELECT*
FROM customer;
/*INSERTING DATA IN THE EMPLOYEE TABLE*/
INSERT INTO Employee (EmployeeId, LastName, FirstName, Title, ReportsTo, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) VALUES (9, 'Torres', 'Lily', 'IT Staff', 6, TO_DATE('1970-02-17 00:00:00','yyyy-mm-dd hh24:mi:ss'), TO_DATE('2007-08-14 00:00:00','yyyy-mm-dd hh24:mi:ss'), '723 7 ST NW', 'Lethbridge', 'AB', 'Canada', 'T1H 1Y8', '+1 (403) 456-7890', '+1 (403) 456-8872', 'lily@chinookcorp.com');
INSERT INTO Employee (EmployeeId, LastName, FirstName, Title, ReportsTo, BirthDate, HireDate, Address, City, State, Country, PostalCode, Phone, Fax, Email) VALUES (10, 'Grey', 'Meredith', 'Sales Support Agent', 2, TO_DATE('1988-12-15 00:00:00','yyyy-mm-dd hh24:mi:ss'), TO_DATE('2010-07-05 00:00:00','yyyy-mm-dd hh24:mi:ss'), '1000 7 Ave SW', 'Calgary', 'AB', 'Canada', 'T2P 5M6', '+1 (403) 263-3323', '+1 (403) 263-4346', 'meredith@chinookcorp.com');
/*INSERTING DATA IN THE CUSTOMER TABLE*/
INSERT INTO Customer (CustomerId, FirstName, LastName, Company, Address, City, State, Country, PostalCode, Phone, Fax, Email, SupportRepId) VALUES (60, 'Linda', 'Oh', '', '66 Broadway', 'Manhattan', 'NY', 'USA', '10010', '+1 (347) 280-8899', '+1 (347) 280-9966', 'SandraOh@gmail.com', 3);
INSERT INTO Customer (CustomerId, FirstName, LastName, Company, Address, City, State, Country, PostalCode, Phone, Fax, Email, SupportRepId) VALUES (61, 'Michelle', 'Lee', '', '121 Lexington Ave', 'Manhattan', 'NY', 'USA', '10013', '+1 (917) 551-1347', '+1 (917) 884-7765', 'Michelle@gmail.com', 3);

/*QUESTION 2.4*/
/*USING THE UPDATE OPERATOR*/
/*UPDATE RECORD IN CUSTOMER TABLE -- FROM AARON MICHELL TO ROBERT WALTER*/
UPDATE CUSTOMER
SET FIRSTNAME = 'Robert', LASTNAME='Walter'
WHERE CUSTOMERID=32;

/*UPDATE RECORD IN ARTIST TABLE FROM CREEDENCE CLEARWATER REVIVAL TO CCR*/
UPDATE ARTIST
SET NAME ='CCR'
WHERE ARTISTID=76;

/*QUESTION 2.5*/
/*USING THE LIKE OPERATOR*/
/*SELECTING ALL FIELDS FROM INVOICE, USING A 'LIKE' OPERATOR IN THE WHERE CLAUSE TO FIND BILLING ADDRESS 
STARTING WITH A 'T'*/
SELECT* 
FROM INVOICE
WHERE BILLINGADDRESS LIKE 'T%';

/*QUESTION 2.6*/
/*USING THE BETWEEN OPERATOR*/
/*USING THE BETWEEN OPERATOR TO FIND VALUES BETWEEN 15 AND 20 IN THE TOTAL COLUMN*/
SELECT* 
FROM INVOICE
WHERE TOTAL BETWEEN 15 AND 20;
/*USING THE 'BETWEEN' AND 'AND' OPERATOR TO FIND THE EMPLOYEES THAT WERE HIRED BETWEEN
THOSE TWO DATES*/
SELECT *
FROM EMPLOYEE
WHERE HIREDATE BETWEEN '01-MAR-03' AND '01-JUN-04';

/*QUESTION 2.7*/
/*DELETING RECORD OF ROBERT WALTER */
/*delete in the order from child to parent, so anything in invoiceline that corresponds to invoice where
customerid=32 gets deleted, then in invoice customerid =32 gets deleted, then in the CUSTOMER'S TABLE, 
CUSTOMERID=32 GETS DELETED*/
delete 
from invoiceline 
where invoiceid in 
(select invoiceid
from invoice
where customerid=32);

delete
from invoice
where customerid=32;

delete from customer where customerid=32;


/*QUESTION 3.1*/
/*USING SYSTEM DEFINED FUNCTIONS*/

SELECT TO_CHAR(CURRENT_TIMESTAMP, 'HH:MI:SS')FROM DUAL;

/*FUNCTION THAT RETURNS LENGTH OF NAME IN MEDIATYPE*/

SELECT LENGTH(NAME)
FROM MEDIATYPE;

/*QUESTION 3.2*/
/*RETURNING THE AVERAGE TOTAL OF ALL INVOICES*/

SELECT AVG(TOTAL) 
FROM INVOICE;

/*RETURNING THE MOST EXPENSIVE TRACK*/

SELECT NAME,UNITPRICE
FROM TRACK
WHERE UNITPRICE = (SELECT MAX(UNITPRICE) FROM TRACK);

/*QUESTION 3.3*/
CREATE OR REPLACE FUNCTION AVGPRICE
RETURN NUMBER
IS 
Z NUMBER;
BEGIN
    SELECT SUM(UNITPRICE)/COUNT(QUANTITY) INTO Z
    FROM INVOICELINE;
    RETURN Z;
END;

SELECT AVGPRICE() FROM DUAL;

/*QUESTION 3.4*/
/*EMPLOYEES BORN AFTER 1968*/
CREATE OR REPLACE FUNCTION EMPAFTER1968
RETURN SYS_REFCURSOR
AS
X SYS_REFCURSOR;
BEGIN
OPEN X FOR SELECT * FROM EMPLOYEE WHERE BIRTHDATE >DATE'1969-01-01';
RETURN X;
END; 
SELECT EMPAFTER1968() FROM DUAL;

/*QUESTION 4.1*/
/*STORED PROCEDURE THAT SELECTS THE FIRST AND LAST NAMES OF ALL EMPLOYEES*/
create or replace PROCEDURE EMPNAME(LIST OUT SYS_REFCURSOR) AS
BEGIN
    OPEN LIST FOR
    SELECT LASTNAME,
           FIRSTNAME
    FROM EMPLOYEE;
END EMPNAME;

DECLARE
L_CURSOR SYS_REFCURSOR;
LNAME VARCHAR(20);
FNAME VARCHAR(20);
BEGIN 
EMPNAME (LIST=> L_CURSOR);
LOOP
    FETCH L_CURSOR
    INTO LNAME, FNAME;
    EXIT WHEN L_CURSOR%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE('LAST NAME: ' ||LNAME||' FIRST NAME: '||FNAME);
    END LOOP;
    CLOSE L_CURSOR;
END;

/*UPDATE PERSONAL INFO FROM EMPLOYEE*/
CREATE OR REPLACE PROCEDURE UPDATEEMP
(NEW_EMPLOYEEID IN NUMBER,
 NEW_LASTNAME IN VARCHAR2,
 NEW_FIRSTNAME IN VARCHAR2,
 NEW_TITLE IN VARCHAR2,
 NEW_REPORTSTO IN NUMBER,
 NEW_BIRTHDATE IN DATE,
 NEW_HIREDATE IN DATE,
 NEW_ADDRESS IN VARCHAR2,
 NEW_CITY IN VARCHAR2,
 NEW_STATE IN VARCHAR2,
 NEW_COUNTRY IN VARCHAR2,
 NEW_POSTALCODE IN VARCHAR2,
 NEW_PHONE IN VARCHAR2,
 NEW_FAX IN VARCHAR2,
 NEW_EMAIL IN VARCHAR2
 )
 AS 
 BEGIN
    UPDATE EMPLOYEE
    SET EMPLOYEEID = NEW_EMPLOYEEID, LASTNAME = NEW_LASTNAME, FIRSTNAME = NEW_FIRSTNAME, TITLE = NEW_TITLE, REPORTSTO = NEW_REPORTSTO, BIRTHDATE=NEW_BIRTHDATE, HIREDATE = NEW_HIREDATE, ADDRESS = NEW_ADDRESS, CITY = NEW_CITY, STATE = NEW_STATE, COUNTRY = NEW_COUNTRY, POSTALCODE = NEW_POSTALCODE, PHONE = NEW_PHONE, FAX = NEW_FAX, EMAIL = NEW_EMAIL
    WHERE EMPLOYEEID = NEW_EMPLOYEEID;
    
END; 
begin
 UPDATEEMP(10,'SMITH','JACKIE','IT STAFF',6,'18-JUN-95', '5-MAY-10','32 123ST','MANHATTAN','NY','USA',10012,'+1 (718)234-7896','+1 (718)234-8765','JACKIE@Chinookcorp.com');
end;
ROLLBACK;

/*RETURNS MANAGERS OF EMPLOYEE*/

CREATE OR REPLACE PROCEDURE RETMAN 
(RID IN NUMBER,
LAST_NAME OUT VARCHAR,
FIRST_NAME OUT VARCHAR
)
IS
BEGIN
SELECT LASTNAME,FIRSTNAME INTO 
LAST_NAME, FIRST_NAME 
FROM EMPLOYEE 
WHERE REPORTSTO=RID;
END;

DECLARE
V1 VARCHAR(20);
V2 VARCHAR(20);
BEGIN
RETMAN(1,V1,V2);
DBMS_OUTPUT.PUT_LINE(V1||' ' ||V2);

END;


/*Question 4.3*/
/*CREATE STORED PROCEDURE THAT RETURNS THE NAME AND COMPANY OF A CUSTOMER*/
CREATE OR REPLACE PROCEDURE RETCUST 
(CID IN NUMBER,
LAST_NAME OUT VARCHAR,
FIRST_NAME OUT VARCHAR,
COMPNAME OUT VARCHAR
)
IS
BEGIN
SELECT LASTNAME,FIRSTNAME,COMPANY INTO 
LAST_NAME, FIRST_NAME, COMPNAME 
FROM CUSTOMER 
WHERE CUSTOMERID=CID;
END;

DECLARE
V1 VARCHAR(20);
V2 VARCHAR(20);
V3 VARCHAR(80);
BEGIN
RETCUST(1,V1,V2,V3);
DBMS_OUTPUT.PUT_LINE('LAST NAME: '||V1||' FIRST NAME: ' ||V2||' COMPANY NAME: '||V3);
END;

/*QUESTION 5*/
/*GIVEN INVOICEID WILL DELETE THAT INVOICE*/
create or replace PROCEDURE DELETEINVOICE
(INVOICE_ID IN INVOICE.INVOICEID%TYPE)
AS
BEGIN
    DELETE
    FROM INVOICELINE
    WHERE INVOICEID = (SELECT INVOICEID FROM INVOICE WHERE INVOICEID = INVOICE_ID);
    DELETE 
    FROM INVOICE
    WHERE INVOICEID =INVOICE_ID;
    COMMIT;
END;
BEGIN
DELETEINVOICE(319);
END;


/*INSERT NEW RECORD IN CUSTOMER TABLE*/
create or replace PROCEDURE INSERTCUST
(
    CUSTOMER_ID IN NUMBER,
    FIRST_NAME IN VARCHAR,
    LAST_NAME IN VARCHAR,
    COM_PANY IN VARCHAR,
    ADD_RESS IN VARCHAR,
    CI_TY IN VARCHAR,
    STATE_ IN VARCHAR,
    COUNTRY_ IN VARCHAR,
    POSTAL_CODE IN VARCHAR,
    PHONE_ IN VARCHAR,
    FAX_ IN VARCHAR,
    EMAIL_ IN VARCHAR,
    SUPPORTREP_ID IN NUMBER
)
AS 
BEGIN
    INSERT INTO Customer (CustomerId, FirstName, LastName, Company, Address, City, State, Country, PostalCode, Phone, Fax, Email, SupportRepId) VALUES 
(CUSTOMER_ID,FIRST_NAME,LAST_NAME,COM_PANY,ADD_RESS,CI_TY,STATE_,COUNTRY_,POSTAL_CODE,PHONE_,FAX_,EMAIL_,SUPPORTREP_ID);
    COMMIT;
END;
BEGIN
INSERTCUST(62, 'Susan', 'Mag', '', '125 88 Ave', 'Manhattan', 'NY', 'USA', '11220', '+1 (917) 681-5754', '+1 (681) 884-7763', 'Susan@gmail.com', 3);
END;
select*from customer where customerid=62;


/*QUESTION 6*/
/*AFTER INSERT TRIGGER ON EMPLOYEE TABLE*/
create or replace TRIGGER AFTERINSERT
AFTER INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
    DBMS_OUTPUT.PUT_LINE('NEW INSERTED VALUES ARE: '||:NEW.EMPLOYEEID||' ' || :NEW.LASTNAME||' '||:NEW.FIRSTNAME||' '||:NEW.TITLE||' '||:NEW.REPORTSTO||' '||:NEW.BIRTHDATE||' '||:NEW.HIREDATE||' '||:NEW.ADDRESS||' '||:NEW.CITY||' '||:NEW.STATE||' '||:NEW.COUNTRY||' '||:NEW.POSTALCODE||' '||:NEW.PHONE||' '||:NEW.FAX||' '||:NEW.EMAIL);
END;

/*AFTER UPDATE TRIGGER ON ALBUM TABLE*/
create or replace TRIGGER AFTERUPDATE
AFTER UPDATE ON ALBUM
FOR EACH ROW 
BEGIN
    DBMS_OUTPUT.PUT_LINE('OLD ALBUMID: '||:OLD.ALBUMID||' OLD TITLE: '||:OLD.TITLE||' OLD ARTISTID: '||:OLD.ARTISTID||' NEW ALBUMID: '||:NEW.ALBUMID||' NEW TITLE: '||:NEW.TITLE||' NEW ARTISTID: '||:NEW.ARTISTID);
END;
update album SET TITLE = 'For Those About To Rock We Salute You' WHERE ALBUMID=1;
ROLLBACK;

/*AFTER DELETE TRIGGER ON CUSTOMER TABLE*/
create or replace TRIGGER AFTERDELETE
AFTER DELETE ON CUSTOMER
FOR EACH ROW 
BEGIN
    DBMS_OUTPUT.PUT_LINE('OLD VALUE IS '||:OLD.CUSTOMERID);
END;
DELETE FROM CUSTOMER WHERE CUSTOMERID=62;
ROLLBACK;

/*QUESTION 7.1*/
/*INNER JOIN THAT JOINS CUSTOMERS AND ORDERS*/
SELECT CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,INVOICE.INVOICEID
FROM CUSTOMER
INNER JOIN INVOICE ON CUSTOMER.CUSTOMERID=INVOICE.CUSTOMERID;
/*QUESTION 7.2*/
/*OUTER JOIN THAT JOINS CUSTOMER AND INVOICE TABLE*/
SELECT CUSTOMER.CUSTOMERID,CUSTOMER.FIRSTNAME,CUSTOMER.LASTNAME,INVOICE.TOTAL
FROM CUSTOMER
FULL OUTER JOIN INVOICE ON CUSTOMER.CUSTOMERID=INVOICE.CUSTOMERID;
/*QUESTION 7.3*/
/*RIGHT JOIN THAT JOINS ALBUM AND ARTIST*/
SELECT ARTIST.NAME,ALBUM.TITLE
FROM ALBUM
RIGHT JOIN ARTIST ON ARTIST.ARTISTID=ALBUM.ARTISTID;
/*QUESTION 7.4*/
/*CROSS JOIN THAT JOINS ALBUM AND ARTIST AND SORTS ARTIST IN ASC ORDER*/
SELECT ARTIST.NAME, ALBUM.TITLE
FROM ARTIST
CROSS JOIN ALBUM
ORDER BY ARTIST.NAME ASC;
/*QUESTION 7.5*/
/*SELF-JOIN ON EMPLOYEE TABLE JOING THE REPORTSTO COLUMN*/
SELECT A.FIRSTNAME, A.LASTNAME, B.FIRSTNAME,B.LASTNAME
FROM EMPLOYEE A, EMPLOYEE B
WHERE A.EMPLOYEEID<>B.EMPLOYEEID
AND A.REPORTSTO=B.REPORTSTO;

