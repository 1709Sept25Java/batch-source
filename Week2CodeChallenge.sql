CREATE TABLE EMPLOYEE 
(
  EMPLOYEE_ID VARCHAR2(20) NOT NULL,PRIMARY KEY 
  EMP_FIRSTNAME VARCHAR2(20) NOT NULL,
  EMP_LASTNAME VARCHAR2(20) NOT NULL,
  DEPARTMENT_ID VARCHAR2(20) NOT NULL,
  SALARY VARCHAR2(20) NOT NULL,
  EMP_EMAIL VARCHAR2(20) NOT NULL
);

CREATE TABLE DEPARTMENT 
(
  DEPARTMENT_ID VARCHAR2(20) NOT NULL, FOREIGN KEY 
  DEPARTMENT_NAME VARCHAR2(20) NOT NULL
);


ALTER TABLE EMPLOYEE
  ADD (
    CONSTRAINT EMPLOYEE_ID PRIMARY KEY (id)
  );
  
CREATE SEQUENCE EMPLOYEE_SEQUENCE;

CREATE OR REPLACE TRIGGER employee_on_insert
  BEFORE INSERT ON employee_id
  FOR EACH ROW
BEGIN
  SELECT employee_sequence.nextval
  INTO :new.id
  FROM dual;
END;


ALTER TABLE DEPARTMENT
  ADD (
    CONSTRAINT DEPARTMENT_ID PRIMARY KEY (id)
  );
  
CREATE SEQUENCE DEPARTMENT_SEQUENCE;

CREATE OR REPLACE TRIGGER deparment_on_insert
  BEFORE INSERT ON department_id
  FOR EACH ROW
BEGIN
  SELECT department_sequence.nextval
  INTO :new.id
  FROM dual;
END;


INSERT INTO "EMPLOYEE" VALUES(1001,'BOB','SMITH','DEP1100',35000,'BOB.SMITH@GMAIL.COM');
INSERT INTO "EMPLOYEE" VALUES(1001,'JOE','LEE','DEP2100',40000,'JOE.LEE@GMAIL.COM');
INSERT INTO "EMPLOYEE" VALUES(1001,'ANNA','SINGH','DEP3100',50000,'ANNA.SINGH@GMAIL.COM');
INSERT INTO "EMPLOYEE" VALUES(1001,'LYNN','BOB','DEP4100',60000,'LYNN.BOB@GMAIL.COM');
INSERT INTO "EMPLOYEE" VALUES(1001,'STACEY','RAMDIN','DEP5100',65000,'STACEY.RAMDIN@GMAIL.COM');
INSERT INTO "EMPLOYEE" VALUES(1001,'MICHAEL','BAY','DEP6100',75000,'MICHAEL.BAY@GMAIL.COM');

INSERT INTO "DEPARTMENT" VALUES('DEP3100','COMPUTER SCIENCE');
INSERT INTO "DEPARTMENT" VALUES('DEP4100','MATHEMATICS');


CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE (DEPARTMENT_NAME NUMBER)
        AS
          total_salary NUMBER('12 * 10%');
        BEGIN
          SELECT SUM(Salary)
            INTO total_salary
            FROM EMPLOYEE
            WHERE DEPARTMENT_ID = DEPARTMTNET_NAME;
          DBMS_OUTPUT.PUT_LINE('Department ' || DEPARTMENT_NAME || ' salary is ' || total_salary);
        END;
  
  
        
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(
	   p_userid IN DBUSER.USER_ID%TYPE,
	   o_username OUT DBUSER.USERNAME%TYPE,
	   o_createdby OUT  DBUSER.CREATED_BY%TYPE,
	   o_date OUT DBUSER.CREATED_DATE%TYPE)
IS
BEGIN
  SELECT USERNAME,CREATED_BY,CREATED_DATE
  INTO o_username,o_createdby,o_date
  from  DBUSER WHERE USER_ID = p_userid;
END;








  



