CREATE TABLE ERS_USERS (
U_ID NUMBER (*,0) PRIMARY KEY,
U_USERNAME VARCHAR2(40 BYTE) UNIQUE,
U_PASSWORD VARCHAR2(40 BYTE),
U_FIRSTNAME VARCHAR2(30 BYTE),
U_LASTNAME VARCHAR2(30 BYTE),
U_EMAIL VARCHAR2(100 BYTE) UNIQUE,
UR_ID NUMBER(*,0)
);

CREATE TABLE ERS_USER_ROLES (
UR_ID NUMBER(*,0) PRIMARY KEY,
UR_ROLE VARCHAR2(40 BYTE)
);

CREATE TABLE ERS_REIMBURSEMENTS (
R_ID NUMBER(*,0) PRIMARY KEY,
R_AMOUNT NUMBER(22,2),
R_DESCRIPTION VARCHAR2(100 BYTE),
R_RECEIPT BLOB,
R_SUMBITTED TIMESTAMP,
R_RESOLVED TIMESTAMP,
U_ID_AUTHOR NUMBER(*,0),
U_ID_RESOLVER NUMBER(*,0),
RT_TYPE NUMBER(*,0),
RT_STATUS NUMBER(*,0)
);

CREATE TABLE ERS_REIMBURSEMENT_STATUS (
RS_ID NUMBER(*,0) PRIMARY KEY,
RS_STATUS VARCHAR2(30 BYTE)
); 

CREATE TABLE ERS_REIMBURSEMENTS_TYPE (
RT_ID NUMBER(*,0) PRIMARY KEY,
RT_TYPE VARCHAR2(30 BYTE)
);

ALTER TABLE ERS_USERS 
ADD CONSTRAINT SYS_C007742 
FOREIGN KEY (UR_ID) REFERENCES ERS_USER_ROLES(UR_ID);


ALTER TABLE ERS_REIMBURSEMENTS
ADD CONSTRAINT SYS_C007753
FOREIGN KEY (U_ID_AUTHOR) REFERENCES ERS_USERS(U_ID);

ALTER TABLE ERS_REIMBURSEMENTS 
ADD CONSTRAINT SYS_C007754
FOREIGN KEY (U_ID_RESOLVER) REFERENCES ERS_USERS(U_ID);

ALTER TABLE ERS_REIMBURSEMENTS 
ADD CONSTRAINT SYS_0007755
FOREIGN KEY (RT_TYPE) REFERENCES ERS_REIMBURSEMENTS_TYPE(RT_ID);

ALTER TABLE ERS_REIMBURSEMENTS 
ADD CONSTRAINT SYS_0007756
FOREIGN KEY (RT_STATUS) REFERENCES ERS_REIMBURSEMENT_STATUS(RS_ID);


CREATE SEQUENCE SK_U_ID_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SK_UR_ID_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SK_R_ID_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SK_RS_ID_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SK_RT_ID_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_U_ID
BEFORE INSERT ON ERS_USERS
FOR EACH ROW
BEGIN
SELECT SK_U_ID_PK.NEXTVAL INTO :NEW.U_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_INSERT_UR_ID
BEFORE INSERT ON ERS_USER_ROLES
FOR EACH ROW
BEGIN
SELECT SK_UR_ID_PK.NEXTVAL INTO :NEW.UR_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_INSERT_R_ID
BEFORE INSERT ON ERS_REIMBURSEMENTS
FOR EACH ROW
BEGIN
SELECT SK_R_ID_PK.NEXTVAL INTO :NEW.R_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_INSERT_RS_ID
BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
FOR EACH ROW
BEGIN
SELECT SK_RS_ID_PK.NEXTVAL INTO :NEW.RS_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_INSERT_RT_ID
BEFORE INSERT ON ERS_REIMBURSEMENTS_TYPE
FOR EACH ROW
BEGIN
SELECT SK_RT_ID_PK.NEXTVAL INTO :NEW.RT_ID FROM DUAL;
END;

INSERT INTO ERS_USER_ROLES  VALUES (1, 'ADMIN'); 
INSERT INTO ERS_USER_ROLES  VALUES (2, 'EMP'); 

INSERT INTO ERS_REIMBURSEMENTS_TYPE VALUES(1, 'Transportaion');
INSERT INTO ERS_REIMBURSEMENTS_TYPE VALUES(2, 'Certificate');
INSERT INTO ERS_REIMBURSEMENTS_TYPE VALUES(3, 'Fringe Benefits')


INSERT INTO ERS_REIMBURSEMENT_STATUS(RS_ID, RS_STATUS) VALUES(1, 'Pending');
INSERT INTO ERS_REIMBURSEMENT_STATUS(RS_ID, RS_STATUS) VALUES(2, 'Denied');
INSERT INTO ERS_REIMBURSEMENT_STATUS(RS_ID, RS_STATUS) VALUES(2, 'Approved');



INSERT INTO ERS_USERS VALUES (1, 'mpimentel', 'password', 'Massiel', 'Pimentel', 'mpimentel@gmail.com', 3);
INSERT INTO ERS_USERS VALUES (2,'kpolino3', 'Zaso9o6', 'Kelsi', 'Polino', 'kpolino3@sitemeter.com', 4);
INSERT INTO ERS_USERS VALUES (3, 'loloman2', '1Tge5z', 'Leonid', 'Oloman', 'loloman2@mysql.com', 4);
INSERT INTO ERS_USERS VALUES (3, 'haid', 'haid', 'Hai', 'Ding', 'haid@gmail.com', 4);


SELECT * FROM ERS_REIMBURSEMENTS WHERE U_ID_AUTHOR = 15;

SELECT ERS_USERS.U_ID, ERS_REIMBURSEMENTS_TYPE.RT_TYPE, ERS_REIMBURSEMENT_STATUS.RS_STATUS, ERS_USERS.U_LASTNAME
FROM (((ERS_REIMBURSEMENTS
INNER JOIN ERS_USERS ON ERS_REIMBURSEMENTS.U_ID_AUTHOR = ERS_USERS.U_ID)
INNER JOIN ERS_REIMBURSEMENTS_TYPE ON ERS_REIMBURSEMENTS.RT_TYPE = ERS_REIMBURSEMENTS_TYPE.RT_ID)
INNER JOIN ERS_REIMBURSEMENT_STATUS ON ERS_REIMBURSEMENTS.RT_STATUS = ERS_REIMBURSEMENT_STATUS.RS_ID);





