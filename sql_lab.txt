2.0 SQL Queries

2.1 SELECT
- SELECT * FROM EMPLOYEE;
-SELECT * FROM EMPLOYEE
WHERE 
LASTNAME ='King';
-SELECT * FROM EMPLOYEE
WHERE 
FIRSTNAME ='Andrew' AND REPORTSTO IS NULL ;

2.2 ORDER BY
-SELECT * FROM ALBUM
ORDER BY TITLE DESC ;
-SELECT FIRSTNAME  FROM CUSTOMER 
ORDER BY CITY  ASC ;

2.3 INSERT INTO
-INSERT INTO GENRE VALUES(27,'BRIGITE');
-INSERT INTO GENRE VALUES(28,'ALYMA');

-INSERT INTO EMPLOYEE VALUES(10,'MAMY','BRIGITE','STAFF',7,18-APR-84,10-OCT-00,'123 ST NW','OTTAWA','AB','CANADA','T1K 5N8','+1 (403) 756-0986','1 (780) 836-0547','BRIGITTE@chinookcorp.com');
-NSERT INTO EMPLOYEE VALUES(11,'Comnos','Alyma','IT Manager',5,22-SEP-84,5-DEC-04,'7727A 41 Ave'.'Calgary','AB','Canada','T3C 1Y7','1 (780) 836-7863','1 (780) 123-9543','aminamaria@chinookcorp.com');

-INSERT INTO CUSTOMER VALUES(60,'Zenobia','Petersen','revature','757 Broadway','New York','NY','USA','10019-2643','+1 (212) 221-0140','+1 (212) 636-4679','petersenb@aol.com',4);
-INSERT INTO CUSTOMER VALUES (61,'James',' Hallway',' John Jay','757 W Superior Street','Bronx','NY','USA','1543-6541','+1 (646) 332-3292','+1 (634) 434-1234','jameshall@yahoo.com',5 );

2.4 UPDATE
-UPDATE CUSTOMER 
SET FIRSTNAME = 'Robert ', LASTNAME ='Walker' WHERE CUSTOMERID = 32;
-UPDATE ARTIST 
SET FIRSTNAME = 'CCR' WHERE NAME ='Creedence Clearwater Revival';

2.5 LIKE
-SELECT * FROM INVOICE 
WHERE BILLINGADDRESS LIKE 'T%';

2.6 BETWEEN
-SELECT * FROM INVOICE 
WHERE 
TOTAL BETWEEN 15 AND 50;
-SELECT * FROM EMPLOYEE
WHERE
HIREDATE BETWEEN '01-JUN-2003' AND '01-MAR-2004 ';


2.7 DELETE
- ALTER TABLE INVOICE DROP COLUMN CUSTOMERID ;
DELETE FROM CUSTOMER 
WHERE CUSTOMERID = 32 ;


SQL Functions

3.1 System Defined Functions
-create or replace function getSysdate
return date is

 C_sysdate date;

begin

  select C_sysdate
    into C_sysdate
    from dual;

  return C_sysdate;

end;

CREATE OR REPLACE FUNCTION getLength ( NAME VARCHAR2)
return number  IS
l_length number ;

BEGIN
  SELECT length(NAME)
  into l_length
    FROM MEDIATYPE ;
  RETURN l_length ;
   END;

3.2 System Defined Aggregate Functions
-

3.3 User Defined Table Valued Functions
 
-CREATE OR REPLACE FUNCTION get_average_item_price(item_name  VARCHAR2)
RETURN NUMBER
IS 
average_price NUMBER;

BEGIN
SELECT AVG(UNITPRICE) 
INTO average_price 
FROM Invoiceline
WHERE UNITPRICE = item_name;
RETURN average_price ;
END;

3.4 User Defined Table Valued Functions

SELECT * FROM EMPLOYEE WHERE BIRTHDATE > '01-JAN-68' ;


4.0 Stored Procedures

4.1  Basic Stored Procedure

CREATE OR REPLACE PROCEDURE GET_EMPLOYEE_INFO (FIRSTNAME IN VARCHAR2, LASTNAME IN VARCHAR2)
AS
RS SYS_REFCURSOR;
BEGIN 
 OPEN RS FOR  SELECT FIRSTNAME,LASTNAME
FROM EMPLOYEE;

RETURN EMPLOYEE_INFO 
END ;




6.00  Triggers

6.1 AFTER/FOR
CREATE OR REPLACE TRIGGER ALERT
AFTER INSERT ON EMPLOYEE
FOR EACH ROW 
ENABLE
DECLARE

V_USER  VARCHAR2(20);

BEGIN
SELECT USER INTO V_USER FROM DUAL;
DBMS_OUTPUT_PUT_LINE('YOU JUST INSERTED A LINE SIR' || V_USER);
END; 
- CREATE OR REPLACE TRIGGER T_UPDATE
AFTER UPDATE ON ALBUM
FOR EACH ROW 
ENABLE
DECLARE

V_USER  VARCHAR2(20);

BEGIN
SELECT USER INTO V_USER FROM DUAL;
DBMS_OUTPUT_PUT_LINE('YOU JUST MADE AN UPDATE' );
END; 
/

- CREATE OR REPLACE TRIGGER T_UPDATE
CREATE OR REPLACE TRIGGER T_UPDATE
AFTER UPDATE ON ALBUM
FOR EACH ROW 
ENABLE
DECLARE

V_USER  VARCHAR2(20);

BEGIN
SELECT USER INTO V_USER FROM DUAL;
DBMS_OUTPUT_PUT_LINE('YOU JUST MADE AN UPDATE' );
END; 
/


7.0 JOINS

7.1 INNER

7.2 OUTER
-SELECT CUSTOMER.CUSTOMERID,FIRSTNAME,LASTNAME,INVOICE.INVOICEID,TOTAL 
FROM CUSTOMER
FULL OUTER JOIN INVOICE
ON CUSTOMER.CUSTOMERID = INVOICE.CUSTOMERID;

7.3 RIGHT
-SELECT ARTIST.NAME,TITLE
FROM ARTIST
RIGHT JOIN ALBUM
ON ARTIST.ARTISTID = ALBUM.ARTISTID ; 

7.4 CROSS
SELECT *
FROM ARTIST
CROSS JOIN ALBUM  
ORDER BY ARTIST.NAME ASC ;

7.5
SELECT * 
FROM EMPLOYEE AS T1 , EMPLOYEE AS T2
WHERE T1.REPORTSTO = T2.REPORTSTO ;


  


   
   





